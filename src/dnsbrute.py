# DNS-Brute-Force-Python
# By: @whitedragon3257
# Script for brute force atacks in subdominies using the DNS Query

# imports
import argparse
import dns.resolver
import concurrent.futures

def resolve_subdomain(domain, subdomain, timeout=1):
    try:
        answers = dns.resolver.query(f"{subdomain}.{domain}", "A", lifetime=timeout)
        for answer in answers:
            print(f"{subdomain}.{domain} ---> {answer}")
    except dns.resolver.NXDOMAIN:
        print(f"{subdomain}.{domain} ---> NXDOMAIN (Subdomain not found)")
    except dns.resolver.Timeout:
        print(f"{subdomain}.{domain} ---> Timeout (DNS query timed out)")

def main():
    parser = argparse.ArgumentParser(description="DNS Brute Force Tool")
    parser.add_argument("domain", help="Target domain")
    parser.add_argument("wordlist", help="Path to wordlist file")
    parser.add_argument("--threads", type=int, default=10, help="Number of threads (default: 10)")
    parser.add_argument("--timeout", type=int, default=1, help="DNS query timeout in seconds (default: 1)")
    args = parser.parse_args()

    with open(args.wordlist, "r") as wordlist_file:
        subdomains = wordlist_file.read().splitlines()

    with concurrent.futures.ThreadPoolExecutor(max_workers=args.threads) as executor:
        futures = [executor.submit(resolve_subdomain, args.domain, subdomain, args.timeout) for subdomain in subdomains]

if __name__ == "__main__":
    main()
